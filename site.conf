{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ffkbu-',

  -- Name of the community.
  site_name = 'Freifunk KBU Hood Koeln V2',

  -- Shorthand of the community.
  site_code = 'ffkbu-V2',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.158.0.0/18',
  prefix6 = 'fdd3:5d16:b5dd:01fc::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- Domain Seed
  domain_seed = '1249e7c89c28feef5c0c8bc22bea5f63a2a1af04b554601a51a62a85edb4c067',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
                'ntp1.k.ffkbu',
                'ntp2.k.ffkbu',
        },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ap = {
        ssid = 'kbu.freifunk.net',
    },
  mesh = {
    id = '02:d1:11:37:fd:49',
    mcast_rate = 12000,
  },
},

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    channel = 44,
    outdoor_chanlist = '100-140',
    ap = {
        ssid = 'kbu.freifunk.net',
    },
  mesh = {
    id = '02:d1:11:37:fd:69',
    mcast_rate = 12000,
  },
},

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    name= { 'nextnode', 'nextnode.bn.ffkbu' },
    -- anycast IPs of all nodes
    -- ip4 = '10.158.0.3',
    -- ip6 = 'fdd3:5d16:b5dd:01fc::01fc',
        ip6 = 'fdd3::ff',

    -- anycast MAC of all nodes
    mac = '16:42:ca:fe:be:ef',
  },

        mesh = {
        vxlan = true,

        batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      gw_sel_class = 3,
      routing_algo = 'BATMAN_IV',
        },
        },

--      dns = {
--              cacheentries=4096,
--              servers = {
--                      'fdd3:5d16:b5dd:01fc::2',
--                      'fdd3:5d16:b5dd:01fc::3',
--              },
--      },



  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.

  mesh_vpn = {
          mtu = 1398,
    fastd = {
            configurable = true,
            -- List of crypto-methods to use.
            methods = {'salsa2012+umac'},
            enabled = 'true',
            groups = {
                backbone = {
                        -- Limit number of connected peers to reduce bandwidth.
                        limit = 1,
                       -- List of peers.
                        peers = {
                                koeln1 = {
                                        key = 'ae120edbbd07dce57c2ed6ebefd112886a1416322e7a98352866eed1e0d633cc',
                                        remotes = {'ipv4 "vpn1.kbu.freifunk.net" port 10010'},
                                     },
                                koeln2 = {
                                        key = '3e01de6c771cf5a50375de4f05e51f7d9251b5659ab9fb54040bf41df411ae46',
                                        remotes = {'ipv4 "vpn2.kbu.freifunk.net" port 10010'},
                                        },
                                koeln3 = {
                                        key = 'c46d7e141b60be6e57ada3087f1b25beb0bfb51e6b42d1c7f02a067d89c13a1a',
                                        remotes = {'ipv4 "vpn3.kbu.freifunk.net" port 10010'},
                                        },
                                koeln4 = {
                                        key = 'f4aff2422921822102ed6e67807b0b5db334f04e071356d30fe6c927b8bb9839',
                                        remotes = {'ipv4 "vpn4.kbu.freifunk.net" port 10010'},
                                        },
                                koeln5 = {
                                        key = 'a6df938cfde83b437346c91e2e548516a25321fb72820f9f757d9479240e26af',
                                        remotes = {'ipv4 "vpn5.kbu.freifunk.net" port 10010'},
                                        },
                                koeln6 = {
                                        key = 'f125456692a9804885ebc33375d0de6ac934b317fc45682849019704d8ee830d',
                                        remotes = {'ipv4 "vpn6.kbu.freifunk.net" port 10010'},
                                },
                                koeln7 = {
                                        key = '389e8ebdf7a7329279b2eb006bd3cf92691eb26f3518e1c596b8634c9f0a3002',
                                        remotes = {'ipv4 "vpn7.kbu.freifunk.net" port 10010'},
                                        },
                                koeln8 = {
                                        key = 'f9dddb5a3f184fc3b10a6b16205c2392be4d11ae0af4901cb901f7f0d103333a',
                                        remotes = {'ipv4 "vpn8.kbu.freifunk.net" port 10010'},
                                        },
                                },
                                },
                        },
        },
        bandwidth_limit = {
                -- The bandwidth limit can be enabled by default here.
                enabled = false,
                -- Default upload limit (kbit/s).
                egress = 200,
                -- Default download limit (kbit/s).
                ingress = 3000,
                },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
                'http://updates.k.ffkbu/autoupdater/koeln/stable/fastd/sysupgrade',

        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                'b35dfb30ab9f54064209d9cb6042d6509cdfdd19352798ef6c3fd61787d4008f', -- JohnnyBee
                '76a44fbb724444ecddc2f683b9e53e061f612a6bfad956b2217c7fc0a82f2df5', -- K3V1N
                '360793e1469e134e99fdecf543202dd0b5b1779299372ac1a4e7c3cad5aade89', -- Simon
                '1c38f1cb1d3900ad053519d7e2b689bb8ae2e59ff72a9e571d4bb559dada3e7a', -- g3ntleman
                '7948cea2d21d94bcf59ef5be2dc248de7d7b828b82993bde1758876560c12c27', -- zygentoma    
                },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

--  authorized_keys = {
--                '',
 --       },

  opkg = {
        extra = {
                modules = 'http://packages.k.ffkbu/modules/koeln/stable/gluon-ffkbu-%GR/%S',
                },
  },

  -- Skip setup mode (config mode) on first boot
  setup_mode = {
    skip = false,
    },
  config_mode = {
    hostname = {
      optional = false,
      prefill = true, 
    },
    geo_location = {
      osm = {
        center = {
          lat = 50.729501501,
          lon = 7.027130127,
        },
        zoom = 13,
      },
    },
    remote_login = {
      show_password_form = true,
      min_password_length = 8,
    },
    owner = {
      obligatory = true,
    },
  },
}
